[MUSIC] Alan Lakein is an author who is famous for
his books on personal time management. He says, "Planning is bringing
the future into the present so you can do something about it now."
A plan highlights what can be done now. It moves you towards a future goal. Planning involves using processes and
requirements to start organizing tasks and schedules. Creating tasks and schedules requires
identifying who should do the work, and estimating how long that work will take. Poorly written requirements make
accurate time estimates difficult. The more specific the requirements are, the clearer it is to estimate how
long the work will take to complete. What happens when your schedule
is based on poor time estimates? The entire timeline for
your project will be unachievable. Imagine that you overestimate
the work you present the client with time-bloated estimates and
inaccurate timelines. Your inflated project tells the client
that you don't understand the project. They'll take their business elsewhere. Or, imagine that you
underestimate the work and promise the client that their project
will be completed by a specific day. The most likely outcome without
incurring additional expenses is that you will not deliver as promised. Estimates are also important for making sure that you don't
over commit to the client. If all of your estimates are too small, you will safely think you can add
cool extra features to your product. Over committing will make your
client happy at first, but when it comes time to deliver
your client will be disappointed. Even if it's a great product, it's
still less than what you promised them. Estimates and schedules are important
part of good planning practices. As you can see from what
we just talked about, having good estimates
reduces project risk. Reducing risk and planning ahead
is all a part of risk management. You are working for a local startup. You have a good chunk of
your planning complete. You are now required to make time
estimates for the development tasks. Who do you think is responsible for
creating time estimates? Choose all that apply. A. Developers. B. Software Product Manager. C. Clients. And/or D. CEO. Time estimates for development
are determined by the developers and the Software Product Manager. The developers best know how long
it takes them to develop features. But as a Product Manager,
you can also offer another opinion. Therefore A and
B are the most correct answers. The client and
CEO can determine target dates, however they do not normally
have a say in time estimates. Risk management is the largest
benefit of planning. Remember Alan Lakein's quote? “Planning is bringing
the future into the present so that you can do something about it now.” If you can predict future risks and
do something about them in the present to mitigate them, then your project will
have a higher chance of success. Here are some examples of some risks that
we can manage in the planning phase. Number one. Development of team responsibilities. You can create plans for what's needed
to be done and who will complete it. This will reduce misunderstanding
about who is responsible for what. Coordinated work efforts contribute
to efficient development and help to establish a constant
development pace. This is a principle that I
mentioned from the Agile Manifesto. Number two. Software release bugs. Effective planning can build
in enough testing time. This will reduce bugs in your
released product and allow time for repair if a significant bug is found. Number three. Missing deadlines and/or budgets. Planning can keep development on track. Which reduces wasted resources. This reduces the risk of your project
being late and/or over budget. You are now working as a Product Manager
for a project that is developing a communication application that will be
used on the next space shuttle mission. It is essential that this
product works as intended. So you have spent a lot of time
working with your development team to identify risks. You've developed a long
list of potential risks. What do you think your next step should
be now that the potential risks have been identified? A. Continue with development as usual. B. Notify an executive. C. Develop a risk plan. Or D. Give up. Identifying risks is a useless process
if you don't do anything about it. Your next step should be to develop a risk
plan with the people who may be affected. You want to come up with a course
of action if the issue does occur. Therefore, C is the correct answer. Planning can also help you to
anticipate problems that may occur. You'll be able to create risk plans for
them. What are some examples of
things that could go wrong? What if a developer gets sick? What if someone quits? What if your client contact changes? Or what if your technology crashes? How are you gonna deal with these issues? Planning allows you to think of
solutions to these problems so that you're prepared in
the event that they do happen. Planning is not just for
the beginning of a project. In software development, planning is something that occurs
constantly throughout the project. Software is always evolving,
your plans have to be flexible. When you have a process to review your
plan, your project becomes more agile. Meaning you can easily adapt to change. Brainstorming scenarios that will
negatively impact your project may seem time consuming at first. But reacting to a problem in the heat
of the moment without a plan is more time consuming. Any solution prepared in a calm and
focused state is going to be better than the quick thinking in
the stress of the moment. Planning can be compared to
a pedestrian crossing the street. A pedestrian could just walk out into
a busy street and hope for the best. Unless someone else is paying attention,
they will most likely get hit. This is the equivalent
of Ad Hoc development. If the pedestrian checks for cars and
then moves forward when they're ready, they are going to make it
safely to the other side. This is the same as looking for
risks when you start development. Sure, there are always going to be
unforeseen risks but you increase your chance of success by looking for
risks and moving forward when it's safe. In the next lesson, Bradley will be
tying all the process requirements and planning together in
a lesson about reviewing and monitoring the progress
in your development.