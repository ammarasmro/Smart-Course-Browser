[MUSIC] Welcome to the second half
of the Introduction to Software Product Management Course. Module two is the next step in your path
to becoming a software product manager. My name is Morgan Patzelt, and I'll be
one of your instructors for this course. I've a keen interest in software
product management, and I'm really excited to
teach you all about it. I've a background in software development. I've experienced development with and without these effective methods that
we'll cover in this specialization. Let me tell you they
make a huge difference. Seeing that difference is what made me want to pursue
software product management. That's why I'm looking forward to
taking you through those lessons so that you can see that difference as well. In this module, you will get a preview
of the entire specialization. This will be your roadmap to follow
on your quest to becoming an SPM professional. At the end of this module, you will understand why we chose
the topics that we will present, and how they will benefit you in your
career as a software product manager. [MUSIC] Let's first talk about
a practice called Agile. Agile practices are guidelines that
suggest how software development should occur to get the best results. Agile covers a large part of what
you will do as a product manager. In fact, most of the concepts that
we will cover in this specialization are a part of Agile. In this lesson I'm going to cover what it
means for a project to be successful and why you should use Agile. I'll give you a spoiler. Success and Agile are directly related. We're going to talk about Agile in
more detail in the next lesson, as well as in the course on “Software
Processes and Agile Practices”. So for now, you and I will just talk
about why it's important to use Agile. Before we start talking about Agile,
let's talk about project success. Software product management professionals
will often use schedule, budget, and user requirements as benchmarks for
defining success. Choose the factor or factors that you think are most
representative of a successful project. In the answer segment, you will have the opportunity to compare
your answers to those of the industry. So there are no wrong
answers with this question. A. on schedule, B. on budget,
and/or C. meets requirements. A survey conducted in
2013 by Scott Ambler and Associates asked participants
how they defined success. If you define success by delivering
the project on schedule, then that aligns with what
58% of respondents said. That means over half of the respondents
thought that being on schedule is an important factor for
project success. 36% said it was an important factor that
the project was delivered on budget. Only 14% believe that
building to specification is even necessary to deliver
a successful project. And only 8% of respondents believe that
a successful project should be delivered on schedule, on budget,
and to specification. It is also interesting to note that 30%
of participants said that on schedule was the sole factor for
determining project success. 9% said that on budget
was the sole factor. And interestingly, only 1 person in
100 believed that having the project completed to specification was
the sole important factor. You can find a link to this
study in our class resources. I recommend that you check it out. Is there another way that
you can find success? What about by developer satisfaction? Sometimes it's easy to forget that
software is created by humans. It almost seems as if these apps and
programs just appear. But behind the scenes, development
teams are spending countless hours and many sleepless nights to
produce these products. So shouldn't their satisfaction count for
something? I mean, without them, there is no product. Although it seems much harder to find
statistics on developer satisfaction, does that make it any less significant? Project success could also be measured
by the number of post-release bugs, the support needed after a release, the product's customer rating, the revenue
generated, or the client satisfaction. No matter how you decide
to measure project success, Agile can help you achieve it. Now we've talked about
how to measure success. What factor do you think is the most
important for having a successful project? A. a good idea. B. a talented development team. C. a business model. D. funding. Or E. timing. A TED Talk by Bill Gross, the founder of
many startups demonstrates that the timing of the release is the most important
factor for business success. A good idea requires customers
that want and need the product. Therefore, E is the correct answer. If you want to check out this TED Talk,
you can find it in our class resources. I highly recommend it. Have you ever met a programmer
that thrives in a chaotic interrupted work environment? Neither have I. Agile brings focus to ensure that your
project develops at a steady, manageable, and efficient pace. This keeps programmers from getting
overwhelmed with the project. The result? Happy and productive programmers. Agile practices also encourage
frequent and consistent testing. This helps to reduce bugs. Agile practices encourage
communication with the client. Keeping your client involved
throughout the entire project gives your client transparency. This ensures that the client is getting
exactly what they asked for, or better yet, something they didn't
even imagine was possible. The goal of your development
team is to satisfy your client. Even the most outstanding product
will fall short if it does not meet the client's needs and expectations. And remember, success is not final,
especially in software development. And failure need not be fatal. American industrialist
Henry Ford said: “Failure is simply the opportunity to begin again,
this time more intelligently.” Software development is all
about iterations and evolutions. Just because you succeed or fail one week does not guarantee
that the next week will be the same. Software constantly changes,
so we must be adaptable. Perhaps you can see that project
success is more like walking a path rather than resting at your destination. Agile practices will impact
the entire development process. This ultimately creates better software,
happier developers, and satisfied clients. As you learn agile and
gain confidence in its practices, you're developing skills that are in
demand by many major tech companies. Companies such as Adobe,
Amazon, Microsoft, and Yahoo all function on a popular
Agile methodology called Scrum. I'll take you through the practices
of Scrum in the course on “Software Processes and Agile Practices”. Now you have a solid understanding
of how Agile practices can impact project success. In the next lesson, we will dive
deeper into the principles of Agile.